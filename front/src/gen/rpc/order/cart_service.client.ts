// @generated by protobuf-ts 2.0.0-alpha.20 with parameters long_type_number,generate_dependencies
// @generated from protobuf file "rpc/order/cart_service.proto" (package "rpc.order", syntax proto3)
// tslint:disable
import type { RpcTransport } from '@protobuf-ts/runtime-rpc'
import type { ServiceInfo } from '@protobuf-ts/runtime-rpc'
import { Cart } from './cart_service'
import { stackIntercept } from '@protobuf-ts/runtime-rpc'
import type { OrderResource } from './order_resource'
import type { UpdateProductRequest } from './update_product_request'
import type { UnaryCall } from '@protobuf-ts/runtime-rpc'
import type { RpcOptions } from '@protobuf-ts/runtime-rpc'
/**
 * @generated from protobuf service rpc.order.Cart
 */
export interface ICartClient {
  /**
   * @generated from protobuf rpc: UpdateProduct(rpc.order.UpdateProductRequest) returns (rpc.order.OrderResource);
   */
  updateProduct(
    input: UpdateProductRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateProductRequest, OrderResource>
}
/**
 * @generated from protobuf service rpc.order.Cart
 */
export class CartClient implements ICartClient, ServiceInfo {
  typeName = Cart.typeName
  methods = Cart.methods
  options = Cart.options
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * @generated from protobuf rpc: UpdateProduct(rpc.order.UpdateProductRequest) returns (rpc.order.OrderResource);
   */
  updateProduct(
    input: UpdateProductRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateProductRequest, OrderResource> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options)
    return stackIntercept<UpdateProductRequest, OrderResource>(
      'unary',
      this._transport,
      method,
      opt,
      input
    )
  }
}
