// @generated by protobuf-ts 2.0.0-alpha.20 with parameters long_type_number
// @generated from protobuf file "user_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { User } from "./user_service";
import type { UsersResponse } from "./users_response";
import type { UserIndexRequest } from "./user_index_request";
import type { UserCreateRequest } from "./user_create_request";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { UserResponse } from "./user_response";
import type { UserShowRequest } from "./user_show_request";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service User
 */
export interface IUserClient {
    /**
     * @generated from protobuf rpc: Show(UserShowRequest) returns (UserResponse);
     */
    show(input: UserShowRequest, options?: RpcOptions): UnaryCall<UserShowRequest, UserResponse>;
    /**
     * @generated from protobuf rpc: Create(UserCreateRequest) returns (UserResponse);
     */
    create(input: UserCreateRequest, options?: RpcOptions): UnaryCall<UserCreateRequest, UserResponse>;
    /**
     * @generated from protobuf rpc: Index(UserIndexRequest) returns (UsersResponse);
     */
    index(input: UserIndexRequest, options?: RpcOptions): UnaryCall<UserIndexRequest, UsersResponse>;
}
/**
 * @generated from protobuf service User
 */
export class UserClient implements IUserClient, ServiceInfo {
    typeName = User.typeName;
    methods = User.methods;
    options = User.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Show(UserShowRequest) returns (UserResponse);
     */
    show(input: UserShowRequest, options?: RpcOptions): UnaryCall<UserShowRequest, UserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<UserShowRequest, UserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Create(UserCreateRequest) returns (UserResponse);
     */
    create(input: UserCreateRequest, options?: RpcOptions): UnaryCall<UserCreateRequest, UserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<UserCreateRequest, UserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Index(UserIndexRequest) returns (UsersResponse);
     */
    index(input: UserIndexRequest, options?: RpcOptions): UnaryCall<UserIndexRequest, UsersResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UserIndexRequest, UsersResponse>("unary", this._transport, method, opt, input);
    }
}
